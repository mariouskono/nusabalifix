const CACHE_NAME="nusabali-v1",urlToCache=["/","/index.html","/styles/style.css","/styles/culture.css","/styles/about-us-responsive.css","/styles/about-us.css","/styles/destination.css","/styles/navigation.css","/script/BurgerIcon.js","/script/navigation-helper.js","/script/map.js","/script/animations.js","/script/app.js","/script/sw.js","/script/HomeModel.js","/script/HomePresenter.js","/script/DestinationModel.js","/script/DestinationPresenter.js","/script/DestinationView.js","/script/DestinationModel.js","/script/DestinationPresenter.js","/images/NUSABali.png","/images/NUSABali white.png","/images/Bali-History-1320x743.jpg"];self.addEventListener("install",(s=>{console.log("Service Worker: Installing"),self.skipWaiting()})),self.addEventListener("activate",(s=>{console.log("Service Worker: Activated"),s.waitUntil(caches.keys().then((s=>Promise.all(s.map((s=>{if(s!==CACHE_NAME)return caches.delete(s)}))))))})),self.addEventListener("fetch",(s=>{s.respondWith(fetch(s.request).then((e=>{const t=e.clone();return caches.open(CACHE_NAME).then((e=>{"GET"===s.request.method&&e.put(s.request,t)})),e})).catch((()=>caches.match(s.request).then((s=>s)))))}));